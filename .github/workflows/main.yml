name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    workflow_dispatch:
jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
#      - uses: actions/setup-java@v1
#        with:
#          java-version: "12.x"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: flutter pub get
#      - run: flutter analyze
#      - run: flutter test

  build_appbundle:
    name: Build Flutter (Android)
    needs: [flutter_test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.5"
          channel: "stable"
      - name: Get dependencies
        run: flutter pub get
      - run: flutter clean
      - run: flutter build appbundle
        #work-above
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
#          artifacts: "build/app/outputs/apk/release/*"
          artifacts: "build/app/outputs/bundle/release/*"
          tag: v0.0.${{github. run_number}}
          token: ${{ secrets.TOKEN }}
          ##SIGNING
      - name: Sign App Bundle
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: build/app/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
          ##TO DOWNLOAD SIGNED APK ON GITHUB MANUALLY
      - name: Upload Signed App Bundle
        uses: actions/upload-artifact@v3
        with:
          name: signed-app-bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

          ##DEPLOY SIGNED APP TO PLAYSTORE
#      - name: Upload to Play Store (Internal Testing)
#        uses: r0adkll/upload-google-play@v1.0.18
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
#          packageName:  com.aponwola.app
#          releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
#          mappingFile: ./build/app/outputs/mapping/release/mapping.txt
#          track: internal



  #  build_ios:
  #    name: Build Flutter (iOS)
  #    needs: [flutter_test]
  #    runs-on: macos-latest
  #    steps:
  #      - uses: actions/checkout@v2
  #      - uses: actions/setup-java@v1
  #        with:
  #          java-version: "12.x"
  #      - uses: subosito/flutter-action@v1
  #        with:
  #          channel: "stable"
  #      - run: flutter pub get
  #      - run: flutter clean
  ###      - run: flutter build ios --release --no-codesign
  ##      - run: |
  ##          cd ios
  ##          rm podfile.lock
  ##          pod deintegrate
  ##          pod install
  ##          pod repo update
  #      - run: |
  #          flutter build ios --no-codesign
  #          cd build/ios/iphoneos
  #          mkdir Payload
  #          cd Payload
  #          ln -s .. /Runner. app cd ..
  #          zip -r app. ipa Payload
  #      - name: Push to Releases
  #        uses: ncipollo/release-action@v1
  #        with:
  #          artifacts: "build/ios/iphoneos/app.ipa"
  #          tag: ios.1.0.${{github. run_number}}
  #          token: ${{secrets. TOKEN}}

